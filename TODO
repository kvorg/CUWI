 -*- outline -*-

* CWB::Model BUGS:

** In paging with Result objects, the end page calculation is wrong
** Structure handling in Query
   (what???)
** Default overrides new for ingorecase
** Bug in combined query syntax: a* [word="t.*"], add test!
** enable quoting of CQP escapes for "[rule]" and '[rule]'
   - change CQP heurisitcs
** Better tests/fails for failing/missing registry specifications
** Clean up newlines at the end of description

* CWB::Model

** Multicorpora
    - add result structures to identify provenence of a result line
    - extract virtual query magic into CWB::Model::Query::Virtual
    spook:
    - created with an external API from existing corpora
    - shuld send queries to multiple corpora and queue or mix the results
    - paging calculation should be optional, wrapped up in a function
      (and thus reusable for virtual corpora; pagesize and this needed)
    - corpus offsets should be included for virtual paging
** spook: sub-searches (based on existing search)
** Tests
** Implement max_size and max_querytime
** Native CQP and cwb-corpus-scan interfaces
** Possibly keep wordlists with paging and progressive building
** Concordance support
** Info files: translateable names/titles
** Add a handle for literal matching (no regexps) with %l
** Test cwb beta release compatibiliy
** Sorting with multiple sort keys
** Wordlist and sorting/prunning using CQP features better
** Implement cached queries:
   - CWB::Model::Corpus keeps a pool of ageing Query objects, matched on query
   - queries are reused with different show options, paging etc.
   - possibly used to support chained queries
** Support for chained query support, list-oriented queries and macros, i.e. 
    /codist["whose", pos];
    /codist[lemma, "go", word];
** Non-blocking high performant queries using
    Mojo::IOLoop->timer(0, sub { poll query or render-cb ; reset timer; }
    or suitable newer solutions
    The query should have a flag when still running and refuse new request
    from the query cache API

* Web interface BUGS

** wordlist: quote metacharacters in string links: check
** fix wierd behavior with last page on \. search on imp-goo
** cuwi favicon
** help icon
** disable context links for biggest display mode (sentence or paragraph)
** sanitize can't/does not work (readonly??) - tests
** make label and checkbox unbreakable in attributes
   (css?)
** possibly closures for exception handling are buggy
   - should rethrow the exception and catch it in webapp?
   - find a way to test all of this

* Web interface

** short ID for structural attribute (auth year?) in [result]
   sane default + changeable from info file or conf
** spook: subcorpus selection: slo, slo*, slo_* ... per et
** spook: Templates for query result exports
   for excel/oocalc, tab-delmited, cvs, xml, latex, json, data::dump, yaml
** spook: web homes for corpus groups
** spook: statistical corpus data at entry page (copora data size in kb, number of keywoards (pojavnice, različnice, leme in datoteke)
** spook: more on home page:
    potem pa še vnaprej pripravljene besedne sezname (urejene po abecedi in pogostosti) na vsak jezik in vsak podkorpus, se pravi za: an, ne, fr, it, sl(-an), sl(-ne), sl(-fr), sl(-it), sl(-sl), sl(-all). 
    seznami naj bodo txt datoteke (precanned, download)
** spook: home page info:
    navodila za uporabo v slovenščini s čimveč primeri različnih tipov iskanj
** spook: password protected groups
** spook: sub-searches (based on existing search)
** spook: structural attribute limited search (links + CQP, then add-on fields)
   "sito za strukturne atribute: maska + link v rezultatih"
** spook: bilingual search support
    Iskalnik mora omogočati iskanje po obeh jezikih hkrati, se pravi npr. Spook-an: president on aligned Spook-sl: predsednik. 
    glej: http://nl2.ijs.si/index-bi.html
** spook
** imp: Use click-to popu-up for help
   (via js binding + help at bottom always)
** imp: sortable frequency lists
** Additional grid interface as per http://nl.ijs.si/jos/cqp/uni
** When more than 7 attributes are present, switch display to 4 drop-down lists 
   (possibly list selection performs a direct query redirect)
** Log cleanup:
   Production mode logging of queries and performance -> info
   Development: info->debug
** Add sample implementation with redirect to a fixed sample seeed [till May 8]
   [check status and add tests]
** Sorting, with options:
   - with 2 or three sort keys
** Split display modes into search, detail, frequencies, collocations
** Add generate config helper to cuwi command line, and help
** Multicorpora support as needed
** Present multilingual aligned corpora as a single entry?
   automatically with a drop-down menu to select the search corpus
** Cleanup of templates: separation with includes, I18n
** I18n
** Concordance support
   - probaly by supporting cwb-scan-corpus and disk-related
     long-polled results, see CWB::Model TODO
** More sorting and grouping for wordlists:
   - by frequency, by object found (using column headings for sort)
   - 2 or 3 sort keys = grouping
** Query compositing, see: http://nl2.ijs.si/fpj.html
** Use compositing or subcorpus to limit to structural atts with links

* Tests

** Finish CWB::Model tests
** CUWI Webapp tests
** Online tests for HTML and CSS syntax checking

* Links: 

** http://corpus.leeds.ac.uk/paraquery.html
** http://www.comp.leeds.ac.uk/ssharoff/
** http://the.sketchengine.co.uk/
** corpus.leeds.ac.uk./natasha mana serge cqp search
** SPOOK concord: http://nl.ijs.si/et/project/SPOOK/konkor/ 
** Para corpora:
   - http://nl2.ijs.si/index-bi.html
           where ALIGNED name is the aligned corpus, aligned by <seg>
   - http://nl2.ijs.si/dsi.html

* Release-critical

** tests
** colocations MI3 LL
** tabular download
** max_size, max_query_time
** I18n
** multicorpora
** documentation

* Future:
** corpus groups
   - main list lists groups and non-grouped corpora
   - groups need special description files -> default corpus, links to members
   - grouped corpora have corpus selectors for corpora within group
   - alternatively, use SISTER_CORPORA in info files for the drop-down menu
** structural constraints (with subcorpora)
** user registration, storable queries, diff between storable queries etc.
 From the list:
Message:
From our experience working interactively in CQP, it's even more useful to
be able to run subqueries, i.e. filter query results either by collocates
(tokens with a certain property within a specified range, e.g. a finite
verb within 3 words) or by another CQP query.  This could easily be
implemented using "set keyword" and subqueries in CQP, but the results
would have to be stored as saved queries (because they can't easily be
reproduced when they're dropped from the cache).

